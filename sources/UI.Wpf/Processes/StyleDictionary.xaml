<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:controlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
	xmlns:local="clr-namespace:UI.Wpf.Processes"
>

	<Style x:Key="processDialogPopupStyle" TargetType="{x:Type controlzEx:PopupEx}">
		<Setter Property="StaysOpen" Value="True" />
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="PopupAnimation" Value="None" />
		<Setter Property="Placement" Value="Center" />
	</Style>

	<Style x:Key="processDialogHostStyle" TargetType="{x:Type materialDesign:DialogHost}">
		<Setter Property="DialogMargin" Value="22" />
		<Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth5" />
		<Setter Property="PopupStyle" Value="{StaticResource processDialogPopupStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="materialDesign:DialogHost">
					<Grid x:Name="DialogHostRoot" Focusable="False">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PopupStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Closed" To="Open">
										<Storyboard>
											<BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
												<DiscreteBooleanKeyFrame Value="True" KeyTime="0" />
											</BooleanAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCoverGrid" Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame Value="0" KeyTime="0" />
												<EasingDoubleKeyFrame Value="0.56" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PopupContentElement" Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame Value="0" KeyTime="0" />
												<EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CardScaleTransform" Storyboard.TargetProperty="ScaleX">
												<EasingDoubleKeyFrame Value="0" KeyTime="0" />
												<EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CardScaleTransform" Storyboard.TargetProperty="ScaleY">
												<EasingDoubleKeyFrame Value="0" KeyTime="0" />
												<EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="Open" To="Closed">
										<Storyboard>
											<BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
												<DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.3" />
											</BooleanAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCoverGrid" Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame Value="0.56" KeyTime="0" />
												<EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PopupContentElement" Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame Value="1" KeyTime="0" />
												<EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.18" />
												<EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CardScaleTransform" Storyboard.TargetProperty="ScaleX">
												<EasingDoubleKeyFrame Value="1" KeyTime="0" />
												<EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.18" />
												<EasingDoubleKeyFrame Value="0.5" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CardScaleTransform" Storyboard.TargetProperty="ScaleY">
												<EasingDoubleKeyFrame Value="1" KeyTime="0" />
												<EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.18" />
												<EasingDoubleKeyFrame Value="0.5" KeyTime="0:0:0.3">
													<EasingDoubleKeyFrame.EasingFunction>
														<SineEase EasingMode="EaseInOut" />
													</EasingDoubleKeyFrame.EasingFunction>
												</EasingDoubleKeyFrame>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Open">
									<Storyboard>
										<BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
											<DiscreteBooleanKeyFrame Value="True" KeyTime="0" />
										</BooleanAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="PART_ContentCoverGrid" Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To=".56" />
										<DoubleAnimation Storyboard.TargetName="PART_PopupContentElement" Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1" />
										<DoubleAnimation Storyboard.TargetName="CardScaleTransform" Storyboard.TargetProperty="ScaleX"
                                                         Duration="0"
                                                         To="1" />
										<DoubleAnimation Storyboard.TargetName="CardScaleTransform" Storyboard.TargetProperty="ScaleY"
                                                         Duration="0"
                                                         To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed">
									<Storyboard>
										<BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
											<DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.3" />
										</BooleanAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<controlzEx:PopupEx PlacementTarget="{Binding ElementName=DialogHostRoot, Mode=OneWay}" x:Name="PART_Popup" Style="{TemplateBinding PopupStyle}">
							<materialDesign:Card x:Name="PART_PopupContentElement" 
                                        Margin="{TemplateBinding DialogMargin}"
                                        materialDesign:ShadowAssist.ShadowDepth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth)}"
                                        UniformCornerRadius="4"
                                        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                                        TextElement.FontWeight="Regular"
                                        TextElement.FontSize="13"
                                        TextOptions.TextFormattingMode="Ideal"
                                        TextOptions.TextRenderingMode="Auto"                  
                                        FocusManager.IsFocusScope="False"
                                        Foreground="{DynamicResource MaterialDesignBody}"
                                        FontFamily="{StaticResource MaterialDesignFont}"
                                        Focusable="True"
                                        IsTabStop="False"
                                        Opacity="0"
                                        RenderTransformOrigin=".5,.5"
                                        Content="{TemplateBinding DialogContent}"
                                        ContentTemplate="{TemplateBinding DialogContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding DialogContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding DialogContentStringFormat}">
								<materialDesign:Card.RenderTransform>
									<TransformGroup>
										<ScaleTransform x:Name="CardScaleTransform" ScaleX="0" ScaleY="0" />
									</TransformGroup>
								</materialDesign:Card.RenderTransform>
							</materialDesign:Card>
						</controlzEx:PopupEx>
						<AdornerDecorator>
							<ContentPresenter x:Name="ContentPresenter"
											  Opacity="1"
											  Content="{TemplateBinding ContentControl.Content}"
											  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
											  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
						</AdornerDecorator>
						<Grid x:Name="PART_ContentCoverGrid" Background="{x:Null}" Opacity="0" IsHitTestVisible="False" Focusable="False" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOpen" Value="True">
							<Setter TargetName="ContentPresenter" Property="IsEnabled" Value="False" />
							<Setter TargetName="PART_ContentCoverGrid" Property="Background" Value="Transparent" />
							<Setter TargetName="PART_ContentCoverGrid" Property="IsHitTestVisible" Value="True" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
